--Задание: Думаем какие запросы у вас будут в базе и добавляем для них индексы. Проверяем, что они используются в запросе.

USE Project_Sbyt;
GO

--При добавлении индексов предполагаем, что данные таблицы имеют достаточно много записей.
--так же возможно в будущем, при росте количества других данных в таблицах, набор индексов будет меняться.

--1. Добавление индексов (некластеризованных) на FK (FOREIGN KEY)
CREATE NONCLUSTERED INDEX ind_Договор_Плательщик			ON sbyt.[Договор] (Плательщик);
CREATE NONCLUSTERED INDEX ind_Договор_Грузополучатель		ON sbyt.[Договор] (Грузополучатель);
CREATE NONCLUSTERED INDEX ind_Договор_Тип					ON sbyt.[Договор] (Тип_договора);
CREATE NONCLUSTERED INDEX ind_Договор_Категория				ON sbyt.[Договор] (Категория_ИД);
CREATE NONCLUSTERED INDEX ind_Договор_Отрасль				ON sbyt.[Договор] (Отрасль_ИД);
CREATE NONCLUSTERED INDEX ind_Договор_Бюджет				ON sbyt.[Договор] (Бюджет_ИД);

CREATE NONCLUSTERED INDEX ind_Классификаторы_Тип			ON sbyt.Классификаторы (Тип);

CREATE NONCLUSTERED INDEX ind_Свойства_ВидыПараметры		ON sbyt.Свойства (Виды_Параметры);
CREATE NONCLUSTERED INDEX ind_Свойства_ПараметрыСчет		ON sbyt.Свойства (Параметры_Счет);
CREATE NONCLUSTERED INDEX ind_Свойства_ПараметрыДоговор		ON sbyt.Свойства (Параметры_Договор);
CREATE NONCLUSTERED INDEX ind_Свойства_ПараметрыОрганизация	ON sbyt.Свойства (Параметры_Организация);

CREATE NONCLUSTERED INDEX ind_ЛицевыеДоговора_Договор 		ON sbyt.Лицевые_договора (Договор);
CREATE NONCLUSTERED INDEX ind_ЛицевыеДоговора_Лицевой 		ON sbyt.Лицевые_договора (Лицевой);

CREATE NONCLUSTERED INDEX ind_СписокОбъектов_Номенклатура	ON sbyt.Список_объектов (Номенклатура_Объекты);
CREATE NONCLUSTERED INDEX ind_СписокОбъектов_Счет			ON sbyt.Список_объектов (Объекты_Счет);

CREATE NONCLUSTERED INDEX ind_ПоказанияСчетчиков_Объект		ON sbyt.Показания_счетчиков (Объект_Показание);
CREATE NONCLUSTERED INDEX ind_ПоказанияСчетчиков_Тип		ON sbyt.Показания_счетчиков (Тип_ввода);

CREATE NONCLUSTERED INDEX ind_Журнал_Счет					ON sbyt.Журнал_изменений (Журнал_Счет);
CREATE NONCLUSTERED INDEX ind_Журнал_Договор				ON sbyt.Журнал_изменений (Журнал_Договор);
CREATE NONCLUSTERED INDEX ind_Журнал_Пользователь			ON sbyt.Журнал_изменений (Журнал_Пользователь);

CREATE NONCLUSTERED INDEX ind_Документ_Тип					ON sbyt.Документ (Тип_документа);
CREATE NONCLUSTERED INDEX ind_Документ_Плательщик			ON sbyt.Документ (Плательщик);
CREATE NONCLUSTERED INDEX ind_Документ_Грузополучатель		ON sbyt.Документ (Грузополучатель);
CREATE NONCLUSTERED INDEX ind_Документ_Договор				ON sbyt.Документ (Документ_Договор);

CREATE NONCLUSTERED INDEX ind_СтрокиДокумента_Документ	ON sbyt.Строки_документа (Строки_Документ);
GO

--2. Добавление индексов на поле ПАПКИ таблиц, для объединения таблиц самих с собой при отображении древовидной структуры на форме приложения.

CREATE NONCLUSTERED INDEX ind_Классификаторы_Папки			ON sbyt.Классификаторы (Папки);
CREATE NONCLUSTERED INDEX ind_Типы_классификатора_Папки 	ON sbyt.[Типы_классификатора] (Папки);
CREATE NONCLUSTERED INDEX ind_Документ_Папки				ON sbyt.Документ (Папки);
GO

--3. Добавление индексов на таблицу Sbyt.[Организации] для быстрого поиска организации по ИНН или ОГРН

CREATE NONCLUSTERED INDEX ind_Организации_ИНН ON Sbyt.[Организации] (ИНН);
CREATE NONCLUSTERED INDEX ind_Организации_ОГРН ON Sbyt.[Организации] (ОГРН);
GO

--4. Добавление индекса на таблицу Sbyt.Договор для быстрого поиска номеру договора
CREATE NONCLUSTERED INDEX ind_Договор_Номер ON Sbyt.Договор (Номер);
GO

--5. Добавление индекса на таблицу Sbyt.Лицевые_счета для быстрого поиска лицевого счета по его номеру
CREATE NONCLUSTERED INDEX ind_Лицевые_счета_Номер ON Sbyt.Лицевые_счета (Номер);
GO

--6. Добавление индекса на таблицу Sbyt.Список_объектов для быстрого поиска прибора учета по его заводскому номеру
CREATE NONCLUSTERED INDEX ind_Список_объектов_ЗаводскойНомер ON Sbyt.Список_объектов (Заводской_Номер);
GO

--7. Добавление индекса на таблицу Sbyt.Документ для быстрого поиска документа по его номеру (думаю пригодится для бухгалтерии)
CREATE NONCLUSTERED INDEX ind_Документ_Номер ON Sbyt.Документ (Номер);
GO

--8. Добавление индекса на таблицу Sbyt.Журнал_изменений для быстрого отображения журнала за конкретный день
CREATE NONCLUSTERED INDEX ind_Журнал_изменений_Дата ON Sbyt.Журнал_изменений (Дата);
GO

--9. Так же добавим составные индексы для выборки данных в зависимости от периода

CREATE INDEX ind_Свойства_ДатНачДатКнц			ON Sbyt.Свойства(ДатНач, ДатКнц);
CREATE INDEX ind_Список_объектов_ДатНачДатКнц	ON Sbyt.Список_объектов(ДатНач, ДатКнц);
CREATE INDEX ind_Лицевые_договора_ДатНачДатКнц	ON Sbyt.Лицевые_договора(ДатНач, ДатКнц);
GO

--Комментарий: Колоночные, пространственные, хмл индексы в проекте использовать не будем т.е. нет надобности.
--Использование полнотекстовых индексов в самом начале под вопросом. В самом начале думаю не имеет смысла, т.к. Не известно, что за приложение и какие требования у заказчика.
--Возможно в будущем на поле Адрес. 


--!!! В вышеупомянутых индексах "обычные покрывающие" индексы создавать пока не будем, т.к. не известно точно какие поля часто будут необходимы для выборки (Select'а)

--Пример запроса
--Полная информацию по ИНН договора на текущий момент времени

Declare @d datetime = GETDATE();
Declare @prID int	= (Select top 1 k.Row_ID from sbyt.[Классификаторы] k Where k.Тип = 7 and k.Название = 'Площадь помещения') 
--На данную таблицу (sbyt.[Классификаторы]) пока вешать индекс не будем, т.к не думаю что первоначально количество записей будет превышать 1000. Возможно в будущем...

Select org.ИНН, org.КПП, org.Название, dg.Номер as НомерДоговора, dg.Начало_договора as ДатаДоговора, ls.Номер, ls.Адрес,
	   ISNULL(sv.Значение, 0)		 as ПлощадьПомещения, 
	   ISNULL(nom.Наименование,'')	 as МодельПрибора, 
	   ISNULL(so.Заводской_номер,'') as ЗаводскойНомер
		 from Sbyt.Организации org
		 join Sbyt.Договор dg			on dg.Плательщик = org.Row_ID
		 join Sbyt.Лицевые_договора Ld	on ld.Договор = dg.Row_ID
											and (@d between ld.ДатНач and ld.ДатКнц)
		 join Sbyt.Лицевые_счета Ls		on ld.Лицевой = ls.Row_ID
	left join Sbyt.Свойства sv			on sv.Параметры_Счет = ls.Row_ID
											and (@d between sv.ДатНач and sv.ДатКнц)	
											and sv.Виды_Параметры = @prID
	left join Sbyt.[Список_объектов] so	on so.Объекты_Счет = ls.Row_ID
	left join Sbyt.Номенклатура nom		on so.Номенклатура_Объекты = nom.Row_ID
Where org.ИНН = '1234567890' 

